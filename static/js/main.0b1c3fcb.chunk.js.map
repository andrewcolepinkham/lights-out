{"version":3,"sources":["components/Buttons.js","components/Box.js","components/Grid.js","components/WinWindow.js","components/InfoWindow.js","components/GaussianSolver.js","index.js"],"names":["Buttons","handleSelect","evt","props","gridSize","className","Button","variant","onClick","this","info","seed","size","hint","React","Component","Box","selectBox","row","col","boxClass","id","Grid","width","cols","rowsArr","i","rows","j","boxId","gridFull","console","log","boxHintIdx","push","key","style","WinWindow","winWindowClass","InfoWidow","visible","pageNum","src","height","closeWindow","nextPage","backPage","href","class","goToGit","gaussianSolver","inputMatrix","mat","input","dimension","length","augCol","Array","Math","sqrt","gassuianMatrixBuilder","matrix","matrixCopy","arr","JSON","parse","stringify","fill","map","binaryMatrixConverter","rowLength","nonZeroEntryFound","colIdx","temp","k","subtractRow","returnList","destinationArr","topArr","Main","gridCopy","state","hasWonTemp","numMoves","moves","setState","hasWon","str","setTimeout","grid","empty","floor","random","booleanMatrix","move","moveList","bool","infoVisible","isVisible","infoPageNum","page","window","open","solve","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b1c3fcb.chunk.js","sourcesContent":["import React from 'react';\n//import './index.css';\nimport {Button} from 'react-bootstrap';\n\nexport default class Buttons extends React.Component{\n    handleSelect = (evt) => {\n      this.props.gridSize(evt);\n    }\n    render() {\n          return (\n              <div className=\"center\">\n                    <Button variant=\"warning\" onClick={this.props.info}>Info</Button>{''}\n                    <Button className='newSeed' variant=\"primary\" onClick={this.props.seed} size='lg'>New Seed</Button>{''}\n                    <Button variant=\"warning\" onClick={this.props.hint}>Hint</Button>{''}\n\n              </div>\n              )\n      }\n  }","import React from 'react';\n//import './index.css';\n\nexport default class Box extends React.Component {\n\n    selectBox = () => {\n      this.props.selectBox(this.props.row, this.props.col);\n    }\n  \n    render(){\n      return(\n        <div \n        className={this.props.boxClass}\n        id={this.props.id}\n        onClick={this.selectBox}\n        /> \n  \n      );\n    }\n  }","import React from 'react';\n//import './index.css';\nimport Box from './Box';\n\n\nexport default class Grid extends React.Component {\n    render(){\n  \n      const width = (this.props.cols * 149);\n      var rowsArr = []\n  \n      var boxClass = '';\n      for (var i = 0; i < this.props.rows; i++){\n        for (var j = 0; j < this.props.cols; j++){\n          let boxId = i + '_' + j;\n  \n          boxClass = this.props.gridFull[i][j] ? 'box on' : 'box off';\n          console.log('this.props.boxHintIdx: ' + this.props.boxHintIdx)\n          if(i===0) { //first row\n            if(this.props.boxHintIdx===j) { //highlight this as hint\n              boxClass = boxClass + ' hint';\n            }\n          } else if(i===1) { //second row\n            var boxNum = this.props.boxHintIdx - 3;\n            if(boxNum===j) { //highlight this as hint\n              boxClass = boxClass + ' hint';\n            }\n          } else { //third row\n            var boxNum = this.props.boxHintIdx - 6;\n            if(boxNum===j) { //highlight this as hint\n              boxClass = boxClass + ' hint';\n            }\n          } \n          \n          rowsArr.push(\n            <Box\n              boxClass={boxClass}\n              key={boxId}\n              boxId={boxId}\n              row={i}\n              col={j}\n              selectBox={this.props.selectBox}\n\n            />\n          )\n        }\n      }\n    \n      \n      return(\n        <div className='grid' style={{width: width}}>\n          {rowsArr}\n        </div>\n      );\n    }\n  }","import React from 'react';\n\nexport default class WinWindow extends React.Component {\n    render(){\n        return(\n            <div \n            className={this.props.winWindowClass}\n            > \n            Nice Work! Try Another!\n            </div>\n        );\n    }\n  }","import React from \"react\";\nimport {Button} from 'react-bootstrap';\n\nexport default class InfoWidow extends React.Component {\n\n  render(){\n  \n    if(this.props.visible){\n\n      switch(this.props.pageNum){\n        default :\n          return(\n            <div className='info-backdrop'>\n              <div className='info'>\n                <h4 className={'infoPageNumber'}>{this.props.pageNum+1}/4</h4>\n                <h1 className={'infoTitle'}>Welcome to Lights Out!</h1>\n                <h2 className={'infoDesc'}>\n                  <span>This is a fun puzzle game I built using React. </span>\n                </h2>\n                <h3 className={'infoPara'}>\n                  <span>The game is based on a interesting linear algebra algorithm I wrote Click \"next\" to learn more. </span>\n                </h3>\n                <div className={'image'}>\n                  <img className={'image'} src={\"images/matrix.png\"} width=\"350\" height=\"350\" ></img>\n                </div>\n                <div className={'infoBtns'}>\n                  <Button className={'infoBtnClose'} variant=\"warning\" onClick={this.props.closeWindow}>Close</Button>{''}\n                  <Button className={'float-right'} variant=\"warning\" onClick={this.props.nextPage}>Next</Button>{''}\n                </div>\n              </div>\n            </div>\n          );\n        case 1:\n          return(\n            <div className='info-backdrop'>\n              <div className='info'>\n                <h4 className={'infoPageNumber'}>{this.props.pageNum+1}/4</h4>\n                <h1 className={'infoTitle'}>How to Play</h1>\n                <h2 className={'infoDesc'}>\n                  <span>Click on the light boxes and try to turn them all off. When you click on a light, it will toggle the neighboring lights, so think carefully! </span>\n                </h2>\n                <h3 className={'infoPara'}>\n                  <span>If you need help, click the \"hint\" button to unlock the correct next move. </span>\n                </h3>\n                <div className={'image'}>\n                <img className={'hintgif'} src={\"images/hint.gif\"} width=\"350\" height=\"350\" ></img>\n                  {/* <img className={'howToPlayImages'} src={\"grid1.png\"} width=\"200\" height=\"200\" ></img>\n                  <img className={'howToPlayImages'} src={\"hint.png\"} width=\"150\" height=\"100\" ></img>\n                  <img className={'howToPlayImages'} src={\"grid2.png\"} width=\"200\" height=\"200\" ></img> */}\n                </div>\n                <div className={'infoBtns'}>\n                  <Button className={'infoBtnClose'} variant=\"warning\" onClick={this.props.closeWindow}>Close</Button>{''}\n                  <Button className={'float-right'} variant=\"warning\" onClick={this.props.nextPage}>Next</Button>{''}\n                  <Button className={'float-right'} variant=\"warning\" onClick={this.props.backPage}>Back</Button>{''}\n                </div>\n              </div>\n            </div>\n          );\n          case 2:\n            return(\n              <div className='info-backdrop'>\n                <div className='info'>\n                  <h4 className={'infoPageNumber'}>{this.props.pageNum+1}/4</h4>\n                  <h1 className={'infoTitle'}>Behind the Algorithm</h1>\n                  <h2 className={'infoDesc'}>\n                    <span>I designed and implemented the algorithm to solve this puzzle game from strach originally in java and then migrated it into this react application. </span>\n                  </h2>\n                  <h3 className={'infoPara'}>\n                    <span>The algorithm utalizes a complex matrix reduction technique called gaussian row reduction. My binary implementation will always return the correct set of moves. See it in action by clicking on the \"hint\" button. </span>\n                  </h3>\n                  <div className={'image'}>\n                    <img className={'image'} src={\"images/code.png\"} width=\"350\" height=\"350\" ></img>\n                  </div>\n                  <div className={'infoBtns'}>\n                    <Button className={'infoBtnClose'} variant=\"warning\" onClick={this.props.closeWindow}>Close</Button>{''}\n                    <Button className={'float-right'} variant=\"warning\" onClick={this.props.nextPage}>Next</Button>{''}\n                    <Button className={'float-right'} variant=\"warning\" onClick={this.props.backPage}>Back</Button>{''}\n                  </div>\n                </div>\n              </div>\n            );\n        case 3:\n          return(\n            <div className='info-backdrop'>\n              <div className='info'>\n              <h4 className={'infoPageNumber'}>{this.props.pageNum+1}/4</h4>\n                <h1 className={'infoTitle'}>Check Out the Code</h1>\n                <h2 className={'infoDesc'}>\n                  <span>If you like this game, be sure to check out some of the other projects that I have built. </span>\n                </h2>\n                <h3 className={'infoPara'}>\n          <span>To find my source code please check out {<a href=\"#\" class=\"cta\" onClick={this.props.goToGit}>my github</a>} page. </span>\n                </h3>\n                <div className={'image'}>\n                  <img className={'image'} src={\"images/githubImage.png\"} width=\"350\" height=\"350\" ></img>\n                </div>\n                <div className={'infoBtns'}>\n                  <Button className={'infoBtnClose'} variant=\"warning\" onClick={this.props.closeWindow}>Close</Button>{''}\n                  <Button className={'float-right'} variant=\"warning\" onClick={this.props.closeWindow}>Finish</Button>{''}\n                  <Button className={'float-right'} variant=\"warning\" onClick={this.props.backPage}>Back</Button>{''}\n                </div>\n              </div>\n            </div>\n          );\n      }\n      \n    } else {\n      return null;\n    }\n    \n  }\n\n}\n","//takes a boolean matrix and outputs a list of 0s and 1s to represent moves\nexport function gaussianSolver(inputMatrix){\n    //console.log('inputMatrix: ' + inputMatrix)\n    var matrix = binaryMatrixConverter(inputMatrix)\n    //console.log('matrix: ' + matrix)\n    var mat = gassuianMatrixBuilder(matrix)\n    //console.log('mat: ' + mat)\n    var rowLength = mat.length;\n        //for each column...\n        for (var i = 0; i < rowLength; i++){\n          var nonZeroEntryFound = false;\n          var colIdx = i;\n          while(!nonZeroEntryFound){//search for non-zero entry until we found one\n              if(mat[colIdx][i]===1){\n                //swapRows\n                var temp = mat[colIdx];\n                mat[colIdx] = mat[i];\n                mat[i] = temp;\n                nonZeroEntryFound = true;\n              }\n              if(colIdx<rowLength-1){\n                colIdx++;\n              }\n              else{\n                break;\n              }\n          }\n          //for each row below i\n          for(var k = i+1; k < rowLength; k++){ //k is the current row we are checking\n            if(mat[k][i]!== 0){\n              subtractRow(mat[k], mat[i]); // A[k] = A[k]-topRow\n            }\n          }\n        }\n        for(var i = rowLength-1; i >= 0; i--){\n          for(var j = i-1; j >= 0; j--){\n            if(mat[j][i]===1){\n             subtractRow(mat[j], mat[i]);\n            }\n          }\n        }\n  \n        var returnList = [];\n        for(var row = 0; row < mat.length; row ++){\n          returnList.push(mat[row][mat.length+1])\n        }\n        return returnList;\n  }\n//Takes a binary matrix of original size and explodes it into a squared version with augmented column\nfunction gassuianMatrixBuilder(input){\n    var inputMatrix = input\n    var dimension = ( inputMatrix.length * inputMatrix.length );\n    var size = 3;\n    //init the augmented column with the values from the input matrix\n    var augCol = [];\n    for(var row = 0; row < inputMatrix.length; row++){\n        for(var col = 0; col < inputMatrix.length; col++){\n        augCol.push(inputMatrix[row][col]);\n        }\n    }\n    //init a new matrix of n^2xn^2+1\n    var mat = [];\n    for(let i = 0; i < dimension; i++) {\n        mat.push(new Array(dimension+1));\n    }\n    //fill with zeros\n    for(var col = 0; col < dimension+1; col++){\n        for(var row = 0; row < dimension; row++){\n        mat[row][col] = 0;\n        }\n    }\n    //logic to fill with 1s\n    for(var col = 0; col < dimension; col++){\n        mat[col][col] = 1;\n        if(col===0){\n            mat[col+1][col] = 1;\n            mat[col+(Math.sqrt(dimension))][col] = 1;\n        }\n        else{\n            if(col===1){\n            mat[col-1][col] = 1;\n            }\n            if(col%size!==0){//not at a left wall\n            mat[col-1][col] = 1;\n            }\n            if((col+1)%size!==0){//not at a right wall\n            if(col!==(dimension-1)){\n                mat[col+1][col] = 1;\n            }\n            }\n            if(col>=size){//not at a top wall\n            mat[col-size][col] = 1;\n            }\n            if(col<(dimension-size)){//not at a bottom wall\n            mat[col+size][col] = 1;\n            }\n        }\n    }\n\n    //fill augmented column with the filled in lights from the newBoard of squares\n    for(var row = 0; row < dimension; row++){\n        mat[row][dimension+1] = augCol[row];\n    }\n    return mat;\n\n}\nfunction subtractRow(destinationArr, topArr){\n    for(var i = 0; i < destinationArr.length; i++){\n        if(destinationArr[i]-topArr[i]===-1){\n        destinationArr[i] = 1;\n        }\n        else{\n        destinationArr[i] = (destinationArr[i]-topArr[i])%2;\n        }\n    }\n}\n//converts a boolean matrix to a binary matrix\nfunction binaryMatrixConverter(matrix){\n    var matrixCopy = arrayClone(matrix)\n    var returnMatrix = Array(matrixCopy.length).fill().map(() => Array(matrixCopy.length).fill(0));\n    for(var i = 0; i < matrix.length; i++){\n        for(var j = 0; j < matrix[0].length; j++){\n        matrixCopy[i][j] = matrixCopy[i][j] ? 1 : 0;\n        }\n    }\n    return matrixCopy\n}\n\nfunction arrayClone(arr){\n    return JSON.parse(JSON.stringify(arr));\n}","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Buttons from './components/Buttons';\nimport Grid from './components/Grid';\nimport WinWindow from './components/WinWindow';\nimport InfoWindow from './components/InfoWindow';\nimport {gaussianSolver} from './components/GaussianSolver'\n\n\nexport default class Main extends React.Component{\n  constructor(){\n    super();\n    this.rows = 3;\n    this.cols = 3;\n    this.state = {\n      moves: 0,\n      gridFull: (Array(this.rows).fill().map(() => Array(this.cols).fill(false))),\n      winWindowClass: 'winOff',\n      boxHintIdx: null,\n      hasWon: false,\n      infoVisible: true,\n      infoPageNum: 0\n    }\n  }\n\n\n  selectBox = (row, col) => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    if(row===0 && col===0){ //upper left corner\n      gridCopy[row][col+1] = !gridCopy[row][col+1];\n      gridCopy[row+1][col] = !gridCopy[row+1][col];\n    } else if(row===0 && col===2){ //upper right corner\n      gridCopy[row][col-1] = !gridCopy[row][col-1];\n      gridCopy[row+1][col] = !gridCopy[row+1][col];\n    } else if(row===2 && col===0){ //bottom left corner\n      gridCopy[row-1][col] = !gridCopy[row-1][col];\n      gridCopy[row][col+1] = !gridCopy[row][col+1];\n    } else if(row===2 && col===2){ //bottom right corner\n      gridCopy[row][col-1] = !gridCopy[row][col-1];\n      gridCopy[row-1][col] = !gridCopy[row-1][col];\n    } else if(row===0 && col===1){ //middle top\n      gridCopy[row][col-1] = !gridCopy[row][col-1];\n      gridCopy[row+1][col] = !gridCopy[row+1][col];\n      gridCopy[row][col+1] = !gridCopy[row][col+1];\n    } else if(row===2 && col===1){ //middle bottom\n      gridCopy[row][col-1] = !gridCopy[row][col-1];\n      gridCopy[row-1][col] = !gridCopy[row-1][col];\n      gridCopy[row][col+1] = !gridCopy[row][col+1];\n    } else if(row===1 && col===0){ //middle left\n      gridCopy[row][col+1] = !gridCopy[row][col+1];\n      gridCopy[row-1][col] = !gridCopy[row-1][col];\n      gridCopy[row+1][col] = !gridCopy[row+1][col];\n    } else if(row===1 && col===2){ //middle left\n      gridCopy[row][col-1] = !gridCopy[row][col-1];\n      gridCopy[row-1][col] = !gridCopy[row-1][col];\n      gridCopy[row+1][col] = !gridCopy[row+1][col];\n    } else {\n      gridCopy[row][col+1] = !gridCopy[row][col+1];\n      gridCopy[row][col-1] = !gridCopy[row][col-1];\n      gridCopy[row-1][col] = !gridCopy[row-1][col];\n      gridCopy[row+1][col] = !gridCopy[row+1][col];\n    }\n    gridCopy[row][col] = !gridCopy[row][col];\n    \n    var hasWonTemp=true;\n    for(var i = 0; i < gridCopy.length; i++){\n      for(var j = 0; j < gridCopy.length; j++){\n        if(gridCopy[i][j]){\n          hasWonTemp = false;\n        }\n      }\n    }\n    var numMoves = this.state.moves;\n    if(hasWonTemp){\n      this.setState({\n        moves: numMoves+1,\n        hasWon: true,\n        gridFull: gridCopy,\n        boxHintIdx: null\n      })\n      var str = '';\n      if(this.state.winWindowClass === 'winOn')\n        str = 'winOff'\n      else \n        str = 'winOn'\n      this.setState({\n        winWindowClass: str\n      })\n      setTimeout(() => { this.seed(); }, 3000);\n    } else {\n      var numMoves = this.state.moves;\n      this.setState({\n      gridFull: gridCopy,\n      moves: numMoves+1,\n      boxHintIdx: null\n    })\n    }\n\n    \n  }\n\n  seed = () => {\n    var grid = Array(this.rows).fill().map(() => Array(this.cols).fill(false));\n    var empty = true;\n    while(empty) { \n      for(let i = 0; i<this.rows; i++){\n        for(let j = 0; j<this.cols; j++){\n          if (Math.floor(Math.random()*2) === 1) {\n            grid[i][j] = true;\n          }\n        }\n      }\n      for(let i = 0; i<this.rows; i++){\n        for(let j = 0; j<this.cols; j++){\n          if(grid[i][j]===true)\n            empty = false;\n        }\n      }\n    }\n    this.setState({\n      gridFull: grid,\n      boxHintIdx: null,\n      moves: 0\n    })\n    this.state.moves = 0;\n  }\n\n  hint = () => {\n    var booleanMatrix = [];\n    for(var i = 0; i < this.state.gridFull.length; i++){\n      var row = [];\n      for(var j = 0; j < this.state.gridFull.length; j++){\n        row.push(this.state.gridFull[i][j])\n      }\n      booleanMatrix.push(row);\n      row = []\n    }\n    console.log(gaussianSolver(booleanMatrix))\n    var moveList = gaussianSolver(booleanMatrix)\n    var move;\n    for(var i = 0; i < moveList.length; i++){\n      if(moveList[i]===1){\n        move = i;\n        break;\n      }\n    }\n    console.log(move)\n    this.setState({\n      boxHintIdx: move\n    })\n    console.log(this.state.boxHintIdx)\n  }\n  \n  //toggle info window\n  info = () => {\n    var bool;\n    this.state.infoVisible? bool=false: bool=true\n    this.setState({\n      infoVisible: bool\n    })\n    if(!this.state.isVisible){\n      this.setState({\n        infoPageNum: 0\n      })\n    }\n\n  }\n\n  nextPage = () => {\n    var page = this.state.infoPageNum\n    page++;\n    this.setState({\n      infoPageNum: page\n    })\n  }\n  backPage = () => {\n    var page = this.state.infoPageNum\n    page--;\n    this.setState({\n      infoPageNum: page\n    })\n  }\n  \n  goToGit = () => {\n    window.open(\"https://github.com/andrewcolepinkham\")\n  }\n\n  componentDidMount() {\n    this.seed();\n  }\n\n  render(){\n\n    return(\n      <div>\n        <h1>Lights Out</h1>\n        <Buttons\n          seed={this.seed}\n          hint={this.hint}\n          solve={this.solve}\n          info={this.info}\n          gridSize={this.gridSize}\n        />\n        <Grid \n          gridFull={this.state.gridFull}\n          rows={this.rows}\n          cols={this.cols}\n          selectBox={this.selectBox}\n          boxHintIdx={this.state.boxHintIdx}\n        />\n        <h2>Moves: {this.state.moves}</h2>\n        <WinWindow\n          winWindowClass={this.state.winWindowClass}\n          hasWon={this.state.hasWon}\n        />\n        <InfoWindow\n        visible ={this.state.infoVisible}\n        closeWindow={this.info}\n        pageNum={this.state.infoPageNum}\n        nextPage={this.nextPage}\n        backPage={this.backPage}\n        goToGit={this.goToGit}\n        />\n      </div>\n\n    );\n  }\n}\n\nfunction arrayClone(arr){\n  return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}